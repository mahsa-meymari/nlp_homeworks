# -*- coding: utf-8 -*-
"""problem4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CSEZRtHCFMOs1ysEF0Ls4OdafI05ZBDE
"""

import os

script_dir =os.path.abspath('')

rel_path = '../in/in_3.txt'
in_addr = os.path.join(script_dir, rel_path)

rel_path = "../out/out_3.txt"
out_addr = os.path.join(script_dir, rel_path)

f = open('words_alpha.txt')
content = f.read()
dictionary = content.split('\n')

def editDistDP(str1, str2, m, n): 
    dp = [[0 for x in range(n+1)] for x in range(m+1)]
    
    for i in range(m + 1): 
        for j in range(n + 1): 
            # If one string is empty, only option is to 
            # insert all characters of other string 
            if i == 0: 
                dp[i][j] = j    # Min. operations = j 
            elif j == 0: 
                dp[i][j] = i    # Min. operations = i 
  
            # If last characters are same, ignore last char 
            # and recur for remaining string 
            elif str1[i-1] == str2[j-1]: 
                dp[i][j] = dp[i-1][j-1] 
  
            # If last character are different, consider all 
            # possibilities and find minimum 
            else: 
                dp[i][j] = 1 + min(dp[i][j-1],        # Insert 
                                   dp[i-1][j],        # Remove 
                                   dp[i-1][j-1])    # Replace 
  
    return dp[m][n]

inp_file = open(in_addr)
inp = inp_file.read()
print(inp)

possible_answers = {}
for word in dictionary:
  if word[0]==inp[0]:
    md = editDistDP(word,inp,len(word),len(inp))
    possible_answers[word]=md

import operator
sorted_possible_answers = sorted(possible_answers.items(), key=operator.itemgetter(1))
answer = [i[0] for i in sorted_possible_answers[:3]]
file_out=open(out_addr,'w')
for word in answer:
  file_out.write(word+'\n')
file_out=open(out_addr,'r')
print(file_out.read())