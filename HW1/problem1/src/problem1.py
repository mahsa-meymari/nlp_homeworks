# -*- coding: utf-8 -*-
"""problem1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pCnxYqxhldPs1hvuodJjOP29_IUvTkLe

**reading csv file and save it in a dictionary that it's keys are writing form and  it's values are reading form**
"""

import os

script_dir =os.path.abspath('')

rel_path = '../in/in_5.txt'
in_addr = os.path.join(script_dir, rel_path)

rel_path = "../out/out_5.txt"
out_addr = os.path.join(script_dir, rel_path)

import csv
with open('Entries.csv') as csvfile:
  reader = csv.DictReader(csvfile)
  phoneDic = {}
  for row in reader:
    if row['WrittenForm'] in phoneDic:
      phoneDic[row['WrittenForm']].append(row['PhonologicalForm'])                                                                                                                                                                                                                                                                                                                                        
    else:
      phoneDic[row['WrittenForm']] = [row['PhonologicalForm']]

"""**getting input sentence**"""

inp_file = open(in_addr,encoding='cp1256')
inp = inp_file.read()
print(inp)

"""**convert input sentence from writing form to reading form**"""

inList = inp.split(' ')
phoneOfSentence = ['']

for word in inList:
  phoneDic[word] = list(set(phoneDic[word]))
  numOfPhone = len(phoneDic[word])
  phoneOfSentence*=numOfPhone
  partSize = int( len(phoneOfSentence) / numOfPhone ) 
  for j in range(numOfPhone):
    for i in range(partSize*j,partSize*(j+1)):
      phoneOfSentence[i]+=phoneDic[word][j]

print(phoneOfSentence)

"""**some helpful function to detect if a sound is a word or not and detect the writing form from reading form**"""

def isWord(phonetic):
  return any(phonetic in sublist for sublist in phoneDic.values())

def get_key(val): 
    for key, values in phoneDic.items(): 
         if val in values: 
             return key   
    return "key doesn't exist"

"""**main part:
a recursive function which finds every single form of writing forms from reading form and returns it as a list**
"""

def findNextWord(i,phoneSent,answer):
  if len(phoneSent[i:])==0:
    return answer
  flag = False
  sample = phoneSent[i:]
  answersBeforeEdit = answer[-1]
  for j in range(len(sample),0,-1):
    if(isWord(sample[:j])):
      if(flag):
        answer.append(answersBeforeEdit)
      answer[len(answer)-1]+=(get_key(sample[:j])+'-')
      answer = findNextWord(j,sample,answer)
      flag=True
  if(not flag):
        del answer[-1]
  return answer

out_file = open(out_addr,'w')
for phoneSent in phoneOfSentence:
  ans = findNextWord(0,phoneSent,[''])
  for row in ans:
    out_file.write(row+'\n')